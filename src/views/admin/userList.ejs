<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User List</title>
  <link rel="stylesheet" href="/admin/styles/admin.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #C41E3A; /* Muted red for better harmony */
      --bg-color: #0E0E0E;
      --table-bg: #1C1C1C;
      --table-alt-bg: #232323;
      --table-hover-bg: #3A3A3A;
      --border-color: #444;
      --text-color: #FFFFFF;
      --secondary-text-color: #888;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--bg-color);
      color: var(--text-color);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      padding-bottom: 60px; /* Space for footer */
    }

    /* Headings */
    h1 {
      margin-left: 240px;
      margin-top: 2rem;
      margin-bottom: 1rem;
      padding: 0 1rem;
      font-size: 2rem;
      font-weight: 700;
      color: var(--text-color);
    }

    /* Search Bar */
    .search-bar-container {
      margin-left: 240px;
      margin-bottom: 1.5rem;
      width: calc(100% - 260px);
      padding: 0 1rem;
    }

    .search-bar-container input[type="text"] {
      width: 100%;
      padding: 0.75rem 1rem;
      border-radius: 6px;
      border: 1px solid var(--border-color);
      background: #222;
      color: var(--text-color);
      font-size: 1rem;
      outline: none;
      transition: border-color 0.3s, box-shadow 0.3s;
    }

    .search-bar-container input[type="text"]:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(196, 30, 58, 0.2);
    }

    /* User Table */
    .user-table {
      margin-left: 240px;
      width: calc(100% - 260px);
      border-collapse: collapse;
      background-color: var(--table-bg);
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      margin-bottom: 2rem;
      padding: 0 1rem;
    }

    .user-table th,
    .user-table td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid var(--border-color);
      vertical-align: top;
      font-size: 1rem;
    }

    .user-table th {
      background-color: var(--primary-color);
      color: var(--text-color);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.02em;
    }

    .user-table td {
      background-color: var(--table-bg);
      color: var(--text-color);
    }

    .user-table tr:nth-child(even) td {
      background-color: var(--table-alt-bg);
    }

    .user-table tr:hover td {
      background-color: var(--table-hover-bg);
    }

    .user-table ul {
      margin: 0.2em 0 0 1.2em;
      padding: 0;
      list-style: disc;
    }

    .user-table li {
      margin-bottom: 0.3em;
      font-size: 0.95em;
      color: var(--text-color);
    }

    /* Buttons */
    .btn {
      padding: 0.6rem 1.2rem;
      text-decoration: none;
      border-radius: 6px;
      font-size: 0.9rem;
      font-weight: 600;
      text-align: center;
      transition: background-color 0.3s, transform 0.1s;
      border: none;
      cursor: pointer;
      margin-right: 0.5rem;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .btn-info {
      background-color: #3182ce;
      color: var(--text-color);
    }

    .btn-info:hover,
    .btn-info:focus {
      background-color: #2b6cb0;
      transform: translateY(-1px);
    }

    .btn-danger {
      background-color: #f44336;
      color: var(--text-color);
    }

    .btn-danger:hover,
    .btn-danger:focus {
      background-color: #d32f2f;
      transform: translateY(-1px);
    }

    .btn:active {
      transform: translateY(0);
    }

    /* Footer */
    .footer {
      background-color: #141414;
      color: var(--text-color);
      text-align: center;
      padding: 1rem;
      width: 100%;
      position: relative; /* Changed from fixed */
      margin-top: auto;
      z-index: 100;
    }

    .footer span {
      color: var(--primary-color);
    }

    /* Responsive Design */
    @media (max-width: 1000px) {
      h1,
      .search-bar-container,
      .user-table {
        margin-left: 0;
        width: 100%;
        padding: 0 0.5rem;
      }

      .user-table {
        font-size: 0.95rem;
        overflow-x: auto;
        display: block;
      }
    }

    @media (max-width: 600px) {
      h1 {
        font-size: 1.5rem;
        margin-top: 1rem;
        padding: 0 0.75rem;
      }

      .search-bar-container {
        margin: 1rem 0.75rem;
      }

      .user-table {
        margin: 0 0.75rem;
        padding: 0;
      }

      .user-table th,
      .user-table td {
        padding: 0.6rem;
        font-size: 0.9rem;
      }

      .user-table thead {
        display: none; /* Hide headers on mobile */
      }

      .user-table tbody tr {
        display: block;
        margin-bottom: 1rem;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 0.5rem;
      }

      .user-table td {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem;
        border: none;
        background: var(--table-bg);
      }

      .user-table td:before {
        content: attr(data-label);
        font-weight: 600;
        color: var(--primary-color);
        width: 40%;
      }

      .user-table tr:nth-child(even) td {
        background: var(--table-bg);
      }

      .user-table tr:hover td {
        background: var(--table-bg);
      }

      .btn {
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
      }
    }
  </style>
</head>
<body>
  <% if (typeof isAdmin !== 'undefined' && isAdmin) { %>
    <%- include('../components/Navbar') %>
  <% } %>
  <h1>User List</h1>

  <!-- Search Bar -->
  <div class="search-bar-container">
    <input
      type="text"
      id="userSearch"
      placeholder="Search by name, email, phone, or address..."
      onkeyup="filterUsers()"
      aria-label="Search users by name, email, phone, or address"
    />
  </div>

  <table class="user-table" role="grid">
    <thead>
      <tr>
        <th>Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Address(es)</th>
        <th>Created At</th>
      </tr>
    </thead>
    <tbody id="userTableBody">
      <% users.forEach(user => { %>
        <tr>
          <td data-label="Name"><%= user.name || '—' %></td>
          <td data-label="Email"><%= user.email %></td>
          <td data-label="Phone"><%= user.phone || '—' %></td>
          <td data-label="Address(es)">
            <% if (user.addresses && user.addresses.length) { %>
              <ul>
                <% user.addresses.forEach(addr => { %>
                  <li>
                    <%= addr.street %>, <%= addr.city %>, <%= addr.state %>, <%= addr.pinCode %>, <%= addr.country %>
                    <% if (addr.isDefault) { %>
                      <span style="color:var(--primary-color);font-weight:600;">(Default)</span>
                    <% } %>
                  </li>
                <% }) %>
              </ul>
            <% } else { %>
              <span style="color:var(--secondary-text-color);">No address</span>
            <% } %>
          </td>
          <td data-label="Created At"><%= new Date(user.createdAt).toLocaleDateString() %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <%- include('../components/Footer') %>

  <script>
    function filterUsers() {
      const search = document.getElementById('userSearch').value.toLowerCase();
      const rows = document.querySelectorAll('#userTableBody tr');
      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(search) ? '' : 'none';
      });
    }

    async function viewUser(userId) {
      try {
        // Replace with actual view user page or modal
        alert(`View user with ID: ${userId}`);
        // Example: window.location.href = `/admin/users/${userId}`;
      } catch (err) {
        console.error('Error viewing user:', err);
        alert('Failed to view user');
      }
    }

    async function deleteUser(userId) {
      if (!confirm('Are you sure you want to delete this user?')) return;
      try {
        const response = await fetch(`/api/users/${userId}`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' }
        });
        if (response.ok) {
          document.querySelector(`tr[data-user-id="${userId}"]`)?.remove();
          alert('User deleted successfully');
        } else {
          throw new Error('Failed to delete user');
        }
      } catch (err) {
        console.error('Error deleting user:', err);
        alert('Failed to delete user');
      }
    }
  </script>
</body>
</html>