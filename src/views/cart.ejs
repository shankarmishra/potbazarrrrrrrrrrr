<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart - PLANTO</title>
    <link href="https://fonts.googleapis.com/css2?family=Arial:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        :root {
            --primary-color: #2f855a;
            --secondary-color: #3182ce;
            --text-color: #333;
            --secondary-text-color: #666;
            --bg-color: #f0f7e7;
            --card-bg: #ffffff;
            --error-color: #e53e3e;
            font-size: 16px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background: linear-gradient(to bottom, var(--bg-color), #ffffff);
            color: var(--text-color);
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            width: 100vw;
            overflow-x: hidden;
        }

        .hidden {
            display: none !important;
        }

        .body-no-scroll {
            overflow: hidden !important;
            position: fixed !important;
            width: 100vw;
        }

        /* Navbar */
        .navbar {
            background: linear-gradient(90deg, var(--primary-color), #276749);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .nav-logo {
            display: flex;
            align-items: center;
            color: #fff;
            font-size: 24px;
            font-weight: bold;
            text-decoration: none;
        }

        .nav-logo img {
            width: 32px;
            height: 32px;
        }

        .nav-logo span {
            margin-left: 8px;
            font-size: 20px;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            font-size: 16px;
            padding: 8px 16px;
            border-radius: 6px;
            transition: background 0.3s;
        }

        .nav-links a:hover,
        .nav-links a:focus {
            background: rgba(0, 0, 0, 0.2);
            outline: none;
        }

        .nav-icons {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .search-bar {
            padding: 8px 16px;
            border-radius: 20px;
            border: 1px solid #ddd;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            width: 200px;
            font-size: 14px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

        .search-bar:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 5px rgba(47, 133, 90, 0.3);
            outline: none;
        }

        .cart-icon-btn,
        .profile-icon-btn {
            background: none;
            border: none;
            cursor: pointer;
            color: #fff;
            font-size: 20px;
        }

        .three-dots {
            display: none;
            cursor: pointer;
            font-size: 2rem;
            color: #fff;
            background: none;
            border: none;
        }

        /* Category Bar */
        .category-bar {
            background: #f7fafc;
            padding: 1rem 2rem;
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
            position: sticky;
            top: 68px;
            z-index: 900;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .category-bar-item {
            position: relative;
            display: inline-block;
        }

        .category-bar-item > a {
            color: var(--text-color);
            text-decoration: none;
            font-size: 16px;
            padding: 8px 16px;
            border-radius: 6px;
            transition: background 0.3s, color 0.3s;
        }

        .category-bar-item > a:hover {
            background: #e8f5e9;
            color: var(--primary-color);
        }

        .category-bar-subcategories {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background: var(--card-bg);
            border: 1px solid #e0e8f0;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            min-width: 200px;
            padding: 0.5rem 0;
            z-index: 950;
        }

        .category-bar-item:hover .category-bar-subcategories {
            display: block;
        }

        .category-bar-subcategories a {
            display: block;
            color: var(--text-color);
            text-decoration: none;
            padding: 8px 16px;
            font-size: 14px;
            transition: background 0.3s;
        }

        .category-bar-subcategories a:hover {
            background: #e8f5e9;
            color: var(--primary-color);
        }

        /* Profile Dropdown */
        .profile-dropdown {
            display: none;
            position: absolute;
            top: 60px;
            right: 1rem;
            background: var(--card-bg);
            border: 1px solid #e0e8f0;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            min-width: 240px;
            padding: 1rem;
            z-index: 1300;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
            animation: fadeInProfile 0.2s;
        }

        @keyframes fadeInProfile {
            from { opacity: 0; transform: translateY(-10px);}
            to { opacity: 1; transform: translateY(0);}
        }

        .profile-dropdown.show {
            display: flex;
        }

        .profile-dropdown p {
            margin: 0.5rem 0;
            font-size: 14px;
            color: var(--text-color);
            word-break: break-word;
        }

        .profile-dropdown button {
            width: 100%;
            padding: 10px;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            margin: 0.25rem 0;
            transition: background 0.3s;
        }

        .profile-dropdown button:hover {
            background: #276749;
        }

        .profile-dropdown button.logout-btn {
            background: var(--error-color);
        }

        .profile-dropdown button.logout-btn:hover {
            background: #b71c1c;
        }

        @media (max-width: 768px) {
            .profile-dropdown {
                top: 56px;
                right: 0.5rem;
                left: 0.5rem;
                width: calc(100vw - 1rem);
                min-width: unset;
                max-width: 98vw;
                padding: 0.75rem;
            }
        }

        @media (max-width: 480px) {
            .profile-dropdown {
                top: 48px;
                right: 0.25rem;
                left: 0.25rem;
                width: calc(100vw - 0.5rem);
                padding: 0.5rem;
            }
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal.show,
        .modal[style*="flex"] {
            display: flex !important;
        }

        .modal-content {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 12px;
            width: 90%;
            max-width: 400px;
            text-align: center;
            position: relative;
        }

        .modal-content h3 {
            margin-top: 0;
            color: var(--text-color);
            font-size: 1.5rem;
        }

        .modal-content button {
            padding: 10px 20px;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            margin: 0.25rem;
            font-size: 14px;
            transition: background 0.3s;
        }

        .modal-content button:hover {
            background: #276749;
        }

        .close-btn {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-color);
        }

        /* Cart Items */
        .cart-items {
            margin: 120px auto 20px;
            padding: 1.5rem;
            background: var(--card-bg);
            border-radius: 12px;
            width: 90%;
            max-width: 1000px;
            text-align: left;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

        .cart-items h2 {
            text-align: center;
            color: var(--primary-color);
            font-size: 2rem;
            margin-bottom: 1rem;
            font-weight: 700;
        }

        #cart-items-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }

        .cart-item {
            background: #f7fafc;
            border-radius: 12px;
            padding: 1rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 1rem;
            border: 1px solid #e0e8f0;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .cart-item img {
            width: 80px;
            height: 80px;
            border-radius: 8px;
            object-fit: cover;
            margin-right: 1rem;
        }

        .cart-item img[alt]:empty::after {
            content: 'Image not available';
            display: block;
            font-size: 0.8em;
            color: var(--secondary-text-color);
            text-align: center;
        }

        .cart-item-info {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .cart-item-info p {
            margin: 0;
            font-size: 0.95rem;
            color: var(--text-color);
        }

        .cart-item-info strong {
            font-size: 1.1rem;
            font-weight: 600;
        }

        .quantity-input {
            width: 60px;
            padding: 0.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            background: #f7fafc;
            font-size: 0.95rem;
            text-align: center;
            outline: none;
            transition: border-color 0.3s;
        }

        .quantity-input:focus {
            border-color: var(--primary-color);
        }

        .cart-item-description {
            font-size: 0.9rem;
            color: var(--secondary-text-color);
            margin-top: 0.5rem;
        }

        .remove-btn {
            padding: 0.5rem 1rem;
            background: var(--error-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.95rem;
            transition: background 0.3s;
        }

        .remove-btn:hover {
            background: #c53030;
        }

        .stock-error {
            position: fixed;
            top: 80px;
            left: 50%;
            transform: translateX(-50%);
            background: var(--error-color);
            color: #fff;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            z-index: 1100;
            opacity: 0;
            transition: opacity 0.5s;
            pointer-events: none;
        }

        .stock-error.show {
            opacity: 1;
        }

        .total-section {
            background: #f7fafc;
            border-radius: 12px;
            padding: 1rem;
            margin: 1.5rem auto 0;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            max-width: 400px;
            font-size: 1rem;
        }

        .total-section p {
            margin: 0.5rem 0;
            text-align: right;
            color: var(--text-color);
        }

        .total-section strong {
            font-size: 1.1rem;
            color: var(--primary-color);
        }

        .cart-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 1rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .cart-actions button {
            flex: 1;
            padding: 0.75rem;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            font-size: 0.95rem;
            cursor: pointer;
            transition: background 0.3s;
        }

        .cart-actions button:hover {
            background: #276749;
        }

        /* Back to Top Button */
        #back-to-top {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            cursor: pointer;
            display: none;
            z-index: 1000;
            font-size: 1.5rem;
            transition: background 0.3s;
        }

        .back-to-top:hover {
            background: #276749;
        }

        #back-to-top.show {
            display: block;
        }

        /* Sticky Cart Icon */
        .sticky-cart {
            position: fixed;
            bottom: 5rem;
            right: 1rem;
            background: var(--primary-color);
            color: #fff;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
            transition: background 0.3s;
        }

        .sticky-cart:hover {
            background: #276749;
        }

        .sticky-cart::before {
            content: '🛒';
            font-size: 24px;
        }

        /* Category Sidebar */
        .category-sidebar {
            display: none;
            flex-direction: column;
            position: fixed;
            top: 0;
            left: -100vw;
            width: 80vw;
            max-width: 320px;
            height: 100vh;
            background: linear-gradient(90deg, var(--primary-color), #276749);
            color: #fff;
            z-index: 2000;
            padding: 2rem 1.2rem;
            overflow-y: auto;
            transition: left 0.3s ease;
        }

        .category-sidebar.show {
            display: flex;
            left: 0;
        }

        .category-sidebar .close-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            color: #fff;
            font-size: 2rem;
            cursor: pointer;
        }

        .sidebar-category {
            margin-bottom: 1.2rem;
        }

        .sidebar-category > a {
            color: #fff;
            font-size: 1.1rem;
            font-weight: 600;
            text-decoration: none;
        }

        .sidebar-subcategories {
            margin: 0.5rem 0 0 1rem;
            padding: 0;
            list-style: disc;
        }

        .sidebar-subcategories li {
            margin-bottom: 0.3rem;
        }

        .sidebar-subcategories a {
            color: #e0ffe0;
            font-size: 1rem;
            text-decoration: none;
        }

        .sidebar-subcategories a:hover {
            color: #d1e8d1;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .navbar {
                padding: 0.75rem 1rem;
            }

            .nav-links {
                display: none !important;
            }

            .three-dots {
                display: block !important;
            }

            .category-bar {
                display: none !important;
            }

            .search-bar {
                width: 150px;
                font-size: 12px;
            }

            .cart-items {
                margin: 110px 1rem 20px;
                padding: 1rem;
                width: calc(100% - 2rem);
            }

            #cart-items-container {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .cart-item {
                flex-direction: column;
                align-items: flex-start;
                padding: 0.75rem;
            }

            .cart-item img {
                margin: 0 0 0.5rem 0;
            }

            .total-section,
            .cart-actions {
                max-width: 100%;
            }

            .cart-actions {
                flex-direction: column;
                gap: 0.5rem;
            }

            .sticky-cart {
                display: flex;
            }

            .profile-dropdown {
                top: 56px;
                right: 0.5rem;
                left: 0.5rem;
                width: calc(100vw - 1rem);
            }
        }

        @media (max-width: 480px) {
            .navbar {
                padding: 0.5rem 0.75rem;
            }

            .nav-logo {
                font-size: 20px;
            }

            .nav-logo span {
                font-size: 16px;
            }

            .search-bar {
                width: 120px;
                font-size: 11px;
            }

            .cart-items {
                margin: 100px 0.5rem 15px;
                padding: 0.75rem;
            }

            .cart-item {
                padding: 0.5rem;
            }

            .cart-item img {
                width: 60px;
                height: 60px;
            }

            .cart-item-info strong {
                font-size: 1rem;
            }

            .cart-item-info p,
            .cart-item-description,
            .quantity-input,
            .remove-btn {
                font-size: 0.85rem;
            }

            .total-section {
                font-size: 0.9rem;
                padding: 0.75rem;
            }

            .total-section strong {
                font-size: 1rem;
            }

            .cart-actions button {
                padding: 0.5rem;
                font-size: 0.85rem;
            }
        }

        @media (min-width: 1200px) {
            .cart-items {
                max-width: 1200px;
            }

            #cart-items-container {
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            }

            .cart-item img {
                width: 100px;
                height: 100px;
            }

            .cart-item-info strong {
                font-size: 1.2rem;
            }

            .cart-item-info p,
            .cart-item-description,
            .quantity-input,
            .remove-btn {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <button class="three-dots" id="threeDotsBtn" onclick="toggleCategorySidebar()" aria-label="Open Categories">☰</button>
        <a href="/" class="nav-logo">
      POTBAZAR<span>🌿</span>
    </a>
        <div class="nav-links">
            <a href="/">Home</a>
            <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener">Blog</a>
            <a href="/#about">About</a>
            <a href="/policy">Policy</a>
            <a href="/cart">Cart</a>
        </div>
        <div class="nav-icons">
            <input
                type="text"
                placeholder="Search products..."
                class="search-bar"
                onkeyup="debounce(searchProducts, 300)(this.value)"
                aria-label="Search products"
            >
            <button class="cart-icon-btn" onclick="goToCart()" aria-label="View Cart">🛒</button>
            <button class="profile-icon-btn" onclick="toggleProfile()" aria-label="Profile">👤</button>
        </div>
    </nav>

    <!-- Profile Dropdown / Login Modal -->
    <% if (user) { %>
    <div class="profile-dropdown" id="profileDropdown">
        <div id="profileContent">
            <p>Loading...</p>
        </div>
        <button onclick="window.location.href='/orders'" aria-label="View Orders">My Orders</button>
        <button class="logout-btn" onclick="logout()" aria-label="Logout">Logout</button>
    </div>
    <% } else { %>
    <div class="profile-dropdown" id="profileDropdown" style="display:none;">
        <div id="profileContent">
            <p>Loading...</p>
        </div>
        <button onclick="window.location.href='/orders'" aria-label="View Orders">My Orders</button>
        <button class="logout-btn" onclick="logout()" aria-label="Logout">Logout</button>
    </div>
    <div class="modal" id="loginModal" style="display:none;">
        <div class="modal-content">
            <button class="close-btn" onclick="closeModal()" aria-label="Close Login Modal">×</button>
            <h3>Please log in or register</h3>
            <p>Login or register to proceed with this action.</p>
            <button onclick="window.location.href='/login?redirect=/cart'" aria-label="Go to Login Page">Login</button>
            <button onclick="window.location.href='/register?redirect=/cart'" aria-label="Go to Register Page">Register</button>
        </div>
    </div>
    <% } %>

    <!-- Category Bar -->
    <div class="category-bar">
        <% categories = categories || [
            { name: 'Plants', subcategories: ['Indoor Plants', 'Outdoor Plants', 'Flowering Plants'] },
            { name: 'Seeds', subcategories: ['Vegetable Seeds', 'Flower Seeds', 'Herb Seeds'] },
            { name: 'Fertilizers', subcategories: ['Organic', 'Chemical', 'Liquid'] }
        ]; %>
        <% categories.forEach(category => { %>
            <div class="category-bar-item">
                <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>">
                    <%= category.name %>
                </a>
                <% if (category.subcategories && category.subcategories.length > 0) { %>
                    <div class="category-bar-subcategories">
                        <% category.subcategories.forEach(sub => { %>
                            <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&subcategory=<%= encodeURIComponent(sub.name ? sub.name : sub) %>">
                                <%= sub.name ? sub.name : sub %>
                            </a>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        <% }) %>
    </div>

    <!-- Category Sidebar -->
    <div class="category-sidebar" id="categorySidebar">
        <button class="close-btn" onclick="toggleCategorySidebar()" aria-label="Close Categories">×</button>
        <h3 style="margin-bottom:1rem;">Menu</h3>
        <div class="sidebar-category">
            <a href="/"><strong>Home</strong></a>
        </div>
        <div class="sidebar-category">
            <a href="https://www.homegardennet.com/?m=1" target="_blank" rel="noopener"><strong>Blog</strong></a>
        </div>
        <div class="sidebar-category">
            <a href="/#about"><strong>About</strong></a>
        </div>
        <div class="sidebar-category">
            <a href="/policy"><strong>Policy</strong></a>
        </div>
        <div class="sidebar-category">
            <a href="/cart"><strong>Cart</strong></a>
        </div>
        <% if (user) { %>
            <div class="sidebar-category">
                <a href="/orders"><strong>My Orders</strong></a>
            </div>
        <% } %>
        <hr style="margin: 1rem 0; border: none; border-top: 1px solid #fff; opacity: 0. secondly2;">
        <h3 style="margin-bottom:1rem;">Categories</h3>
        <% categories.forEach(category => { %>
            <div class="sidebar-category">
                <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>">
                    <strong><%= category.name %></strong>
                </a>
                <% if (category.subcategories && category.subcategories.length > 0) { %>
                    <ul class="sidebar-subcategories">
                        <% category.subcategories.forEach(sub => { %>
                            <li>
                                <a href="/api/products/products?category=<%= encodeURIComponent(category.name) %>&subcategory=<%= encodeURIComponent(sub.name ? sub.name : sub) %>">
                                    <%= sub.name ? sub.name : sub %>
                                </a>
                            </li>
                        <% }) %>
                    </ul>
                <% } %>
            </div>
        <% }) %>
    </div>

    <!-- Cart Items -->
    <div class="cart-items">
        <h2>Your Cart</h2>
        <div id="stock-error" class="stock-error"></div>
        <div id="cart-items-container"></div>
        <div class="total-section">
            <p>Subtotal: ₹<span id="subtotal-price">0.00</span></p>
            <p>Delivery: ₹<span id="delivery-charge">79.00</span></p>
            <p><strong>Total: ₹<span id="total-price">0.00</span></strong></p>
        </div>
        <div class="cart-actions">
            <button onclick="proceedToCheckout()" aria-label="Proceed to Checkout">Proceed to Checkout</button>
            <button onclick="emptyCart()" aria-label="Empty Cart">Empty Cart</button>
        </div>
    </div>

    <!-- Back to Top Button -->
    <button id="back-to-top" aria-label="Back to Top">↑</button>

    <!-- Sticky Cart Icon -->
    <div class="sticky-cart" onclick="goToCart()"></div>

    <script>
        const API_BASE_URL = 'http://localhost:3000';

        // API request helper
        async function apiRequest(method, url, data = null, token = null) {
            try {
                const headers = { 'Content-Type': 'application/json' };
                if (token) headers['Authorization'] = `Bearer ${token}`;
                const config = { method, url, headers, withCredentials: true };
                if (data && method !== 'GET') config.data = data;
                const response = await axios(config);
                return response.data;
            } catch (error) {
                throw error.response?.data || { message: 'Request failed' };
            }
        }

        // Fetch user profile
        async function fetchUserProfile() {
            try {
                const token = localStorage.getItem('accessToken');
                const data = await apiRequest('GET', '/api/users/profile', null, token);
                return data.success && data.user ? data.user : null;
            } catch (error) {
                console.error('Error fetching profile:', error);
                return null;
            }
        }

        // Encode HTML to prevent XSS
        function encodeHTML(str) {
            return str.replace(/[&<>"']/g, function (match) {
                return {
                    '&': '&amp;',
                    '<': '&lt;',
                    '>': '&gt;',
                    '"': '&quot;',
                    "'": '&#39;'
                }[match];
            });
        }

        // Render profile dropdown
        async function renderProfileDropdown() {
            const dropdown = document.getElementById('profileDropdown');
            const content = document.getElementById('profileContent');
            if (!dropdown || !content) return;

            content.innerHTML = '<div class="spinner"></div>';
            const user = await fetchUserProfile();

            if (user) {
                const safeName = user.name ? encodeHTML(user.name) : 'Not provided';
                const safeEmail = user.email ? encodeHTML(user.email) : 'Not provided';
                const safePhone = user.phone ? encodeHTML(user.phone) : 'Not provided';
                const safeAddress = user.addresses?.[0] ? encodeHTML([
                    user.addresses[0].street,
                    user.addresses[0].city,
                    user.addresses[0].state,
                    user.addresses[0].pinCode,
                    user.addresses[0].country
                ].filter(Boolean).join(', ')) : 'Not provided';

                content.innerHTML = `
                    <p><strong>Name:</strong> ${safeName}</p>
                    <p><strong>Email:</strong> ${safeEmail}</p>
                    <p><strong>Phone:</strong> ${safePhone}</p>
                    <p><strong>Address:</strong> ${safeAddress}</p>
                `;
            } else {
                content.innerHTML = `<p>Error loading profile. Please try again or log in.</p>`;
            }
        }

        // Toggle profile dropdown
        let profileVisible = false;
        async function toggleProfile() {
  const dropdown = document.getElementById('profileDropdown');
  if (!dropdown) return;
  const token = localStorage.getItem('accessToken');
  if (!token) {
    showModal();
    return;
  }
  profileVisible = !profileVisible;
  dropdown.classList.toggle('show', profileVisible);
  dropdown.style.display = profileVisible ? 'flex' : 'none';
  if (profileVisible) await renderProfileDropdown();
}

        // Logout
        async function logout() {
            try {
                const token = localStorage.getItem('accessToken');
                await apiRequest('POST', '/api/users/logout', null, token);
            } catch (error) {
                console.error('Logout error:', error);
            } finally {
                localStorage.removeItem('accessToken');
                localStorage.removeItem('refreshToken');
                localStorage.removeItem('cart');
                profileVisible = false;
                const dropdown = document.getElementById('profileDropdown');
                if (dropdown) dropdown.classList.remove('show');
                window.location.href = '/login';
            }
        }

        // Close modal
        function closeModal() {
            document.getElementById('loginModal').style.display = 'none';
        }

        // On page load, initialize profile dropdown if logged in
        document.addEventListener('DOMContentLoaded', () => {
  if (isUserLoggedIn()) {
    renderProfileDropdown();
  }
});
        let scrollPosition = 0;

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        async function searchProducts(searchTerm) {
            // Placeholder for search functionality
            console.log('Search term:', searchTerm);
        }

        async function fetchProductStock(productId) {
            try {
                const response = await fetch(`/api/products/product/stock/${productId}`);
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                const data = await response.json();
                if (typeof data.stock !== 'number' || isNaN(data.stock) || data.stock < 0) {
                    throw new Error('Invalid stock data');
                }
                return data.stock;
            } catch (error) {
                console.error('Error fetching stock:', error);
                showStockError('Failed to fetch stock for some items. Please try again later.');
                return -1;
            }
        }

        function showStockError(msg) {
            const err = document.getElementById('stock-error');
            err.textContent = msg;
            err.classList.add('show');
            setTimeout(() => {
                err.classList.remove('show');
                setTimeout(() => {
                    err.textContent = '';
                }, 500);
            }, 3000);
        }

        async function loadCart() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const cartItemsContainer = document.getElementById('cart-items-container');
            let subtotal = 0;
            const deliveryCharge = cart.length ? 79 : 0;

            cartItemsContainer.innerHTML = '';

            if (cart.length === 0) {
                cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';
                document.getElementById('subtotal-price').textContent = '0.00';
                document.getElementById('delivery-charge').textContent = '0.00';
                document.getElementById('total-price').textContent = '0.00';
            } else {
                for (const item of cart) {
                    const latestStock = await fetchProductStock(item.id);
                    item.stock = (typeof latestStock === 'number' && latestStock >= 0) ? latestStock : 0;
                    item.fetchFailed = latestStock === -1;

                    if (item.quantity > item.stock) {
                        item.quantity = item.stock;
                        localStorage.setItem('cart', JSON.stringify(cart));
                        showStockError(`Adjusted quantity for ${item.name} to available stock of ${item.stock}.`);
                    }

                    subtotal += item.price * item.quantity;

                    const cartItem = document.createElement('div');
                    cartItem.classList.add('cart-item');

                    const fetchFailed = latestStock === -1;
                    const outOfStock = !fetchFailed && (item.stock === 0);

                    cartItem.innerHTML = `
                        <img src="${item.image || 'https://source.unsplash.com/100x100/?plant'}" alt="${item.name}" onerror="this.src='https://source.unsplash.com/100x100/?plant';">
                        <div class="cart-item-info">
                            <p><strong>${item.name}</strong></p>
                            <p>₹${item.price.toFixed(2)}</p>
                            <input type="number" min="1" max="${item.stock}" step="1" class="quantity-input" value="${item.quantity}" 
                                onchange="updateQuantity('${item.id}', this.value, ${item.stock})" ${(outOfStock || fetchFailed) ? 'disabled' : ''} aria-label="Quantity for ${item.name}">
                            <p style="color:${fetchFailed || outOfStock ? 'var(--error-color)' : 'var(--primary-color)'};font-size:0.95em;">
                                ${fetchFailed ? 'Error fetching stock' : (outOfStock ? 'Out of Stock' : 'Stock: ' + item.stock)}
                            </p>
                        </div>
                        <div class="cart-item-description">
                            <p>${item.description || 'No description available'}</p>
                        </div>
                        <button class="remove-btn" onclick="removeItem('${item.id}')" aria-label="Remove ${item.name} from cart">Remove</button>
                    `;

                    cartItemsContainer.appendChild(cartItem);
                }

                document.getElementById('subtotal-price').textContent = subtotal.toFixed(2);
                document.getElementById('delivery-charge').textContent = deliveryCharge.toFixed(2);
                document.getElementById('total-price').textContent = (subtotal + deliveryCharge).toFixed(2);
            }
        }

        async function updateQuantity(id, newQuantity, stock) {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const item = cart.find(item => item.id === id);

            if (item) {
                const latestStock = await fetchProductStock(id);
                item.stock = (typeof latestStock === 'number' && latestStock >= 0) ? latestStock : 0;
                stock = item.stock;

                const quantity = parseInt(newQuantity, 10);
                if (isNaN(quantity) || quantity < 1) {
                    showStockError('Please enter a valid quantity.');
                    item.quantity = 1;
                } else if (quantity > stock) {
                    showStockError(`Cannot exceed available stock of ${stock}!`);
                    item.quantity = stock;
                } else {
                    item.quantity = quantity;
                }
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCart();
            }
        }

        async function proceedToCheckout() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            if (!cart.length) {
                alert('Your cart is empty. Please add items to your cart before proceeding to checkout.');
                return;
            }
            checkLoginBeforeAction(async () => {
                for (const item of cart) {
                    const latestStock = await fetchProductStock(item.id);
                    if (typeof latestStock !== 'number' || latestStock < 1 || item.quantity > latestStock) {
                        showStockError(`Cannot proceed: ${item.name} is out of stock or stock unavailable!`);
                        item.stock = latestStock >= 0 ? latestStock : 0;
                        item.quantity = Math.min(item.quantity, item.stock);
                        localStorage.setItem('cart', JSON.stringify(cart));
                        loadCart();
                        return;
                    }
                }
                window.location.href = '/checkout';
            });
        }

        function removeItem(id) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart = cart.filter(item => item.id !== id);
            localStorage.setItem('cart', JSON.stringify(cart));
            loadCart();
        }

        function emptyCart() {
            localStorage.removeItem('cart');
            loadCart();
        }

        function checkLoginBeforeAction(actionCallback) {
            fetch('/check-login')
                .then(res => res.json())
                .then(data => {
                    if (data.loggedIn) {
                        actionCallback();
                    } else {
                        document.getElementById('loginModal').style.display = 'flex';
                    }
                })
                .catch(error => {
                    console.error('Error checking login:', error);
                    document.getElementById('loginModal').style.display = 'flex';
                });
        }

        function goToCart() {
            checkLoginBeforeAction(() => {
                window.location.href = '/cart';
            });
        }

        function toggleCategorySidebar() {
            const sidebar = document.getElementById('categorySidebar');
            if (sidebar.classList.contains('show')) {
                sidebar.classList.remove('show');
                document.body.classList.remove('body-no-scroll');
                window.scrollTo(0, scrollPosition);
            } else {
                scrollPosition = window.pageYOffset;
                sidebar.classList.add('show');
                document.body.classList.add('body-no-scroll');
            }
        }

        window.addEventListener('click', function(e) {
            const dropdown = document.getElementById('profileDropdown');
            if (dropdown && dropdown.classList.contains('show') && !dropdown.contains(e.target) && !e.target.closest('.profile-icon-btn')) {
                dropdown.classList.remove('show');
                profileVisible = false;
            }
            const sidebar = document.getElementById('categorySidebar');
            if (sidebar && sidebar.classList.contains('show') && !sidebar.contains(e.target) && !e.target.closest('.three-dots')) {
                sidebar.classList.remove('show');
                document.body.classList.remove('body-no-scroll');
                window.scrollTo(0, scrollPosition);
            }

            const modal = document.getElementById('loginModal');
            if (modal && modal.style.display === 'flex' && !modal.querySelector('.modal-content').contains(e.target)) {
                modal.style.display = 'none';
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const sidebar = document.getElementById('categorySidebar');
                if (sidebar && sidebar.classList.contains('show')) {
                    sidebar.classList.remove('show');
                    document.body.classList.remove('body-no-scroll');
                    window.scrollTo(0, scrollPosition);
                }
                const modal = document.getElementById('loginModal');
                if (modal && modal.style.display === 'flex') {
                    modal.style.display = 'none';
                }
                const dropdown = document.getElementById('profileDropdown');
                if (dropdown && dropdown.classList.contains('show')) {
                    dropdown.classList.remove('show');
                    profileVisible = false;
                }
            }
        });

        window.addEventListener('scroll', function() {
            const backToTop = document.getElementById('back-to-top');
            if (window.scrollY > 300) {
                backToTop.classList.add('show');
            } else {
                backToTop.classList.remove('show');
            }
        });

        document.getElementById('back-to-top').addEventListener('click', function() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });

        window.addEventListener('load', loadCart);
    </script>
</body>
</html>